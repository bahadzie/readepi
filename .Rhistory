?options
devtools::run_examples()
testthat::test_examples()
?testthat::test_examples
testthat::test_examples(".")
devtools::load_all(".")
testthat::test_examples(".")
testthat::test_examples(".")
devtools::load_all(".")
testthat::test_examples(".")
?DBI::dbConnect
?DBI::dbSendQuery
devtools::load_all(".")
testthat::test_examples(".")
con = DBI::dbConnect(RMySQL::MySQL(),
driver = "",
host = "mysql-rfam-public.ebi.ac.uk",
dbname = "Rfam",
user = "rfamro",
password = "",
port = 4497
)
DBI::dbDisconnect(conn = con)
??DBI
library(DBI)
??DBI
?DBI
devtools::load_all(".")
testthat::test_examples(".")
?devtools::run_examples
devtools::load_all(".")
lintr::lint_package()
usethis::use_tidy_description()
usethis::use_tidy_description()
devtools::load_all(".")
usethis::use_tidy_description()
devtools::load_all(".")
visualise_table(
table = "author",
con = DBI::dbConnect(RMySQL::MySQL(),
driver = "",
host = "mysql-rfam-public.ebi.ac.uk",
dbname = "Rfam",
user = "rfamro",
password = "",
port = 4497
),
display = TRUE,
dbms =  "MySQL"
)
DBI::dbDisconnect(con)
visualise_table(
table = "author",
con = DBI::dbConnect(RMySQL::MySQL(),
driver = "",
host = "mysql-rfam-public.ebi.ac.uk",
dbname = "Rfam",
user = "rfamro",
password = "",
port = 4497
),
display = TRUE,
dbms =  "MySQL"
)
devtools::load_all(".")
visualise_table(
table = "author",
con = DBI::dbConnect(RMySQL::MySQL(),
driver = "",
host = "mysql-rfam-public.ebi.ac.uk",
dbname = "Rfam",
user = "rfamro",
password = "",
port = 4497
),
display = TRUE,
dbms =  "MySQL"
)
pkgdown::build_site()
devtools::load_all(".")
devtools::build_readme()
pkgdown::build_site()
devtools::build_readme()
?DBI::dbPool
??dbPool
library(pool)
install.packages("pool")
pool::dbPool()
?pool::dbPool
devtools::load_all(".")
testthat::test_examples(".")
?pool::poolClose
con = pool::dbPool(RMySQL::MySQL(),
driver = "",
host = "mysql-rfam-public.ebi.ac.uk",
dbname = "Rfam",
user = "rfamro",
password = "",
port = 4497
)
devtools::load_all(".")
testthat::test_examples(".")
query <- paste0("select * from ", table)
table
table="author"
query <- paste0("select * from ", table)
sql <- DBI::dbGetQuery(con, query)
View(sql)
devtools::load_all(".")
testthat::test_examples(".")
?DBI::dbGetQuery
exists("con")
poolClose(pool)
library(pool)
poolClose(pool)
poolClose(con)
exists("con")
dbDisconnect(con)
DBI::dbDisconnect(con)
exists("con")
pool::poolCheckout(con)
con = pool::dbPool(RMySQL::MySQL(),
driver = "",
host = "mysql-rfam-public.ebi.ac.uk",
dbname = "Rfam",
user = "rfamro",
password = "",
port = 4497
)
pool::poolCheckout(con)
res <- DBI::dbGetQuery(con, query)
devtools::run_examples()
poolClose(con)
?pool::dbPool
devtools::load_all(".")
devtools::load_all(".")
devtools::run_examples()
pool::poolClose(con)
rlang::last_trace()
rm(con)
exists("con")
devtools::run_examples()
pool::poolClose(con)
all_cons <- dbListConnections(MySQL())
all_cons <- DBI::dbListConnections(MySQL())
devtools::load_all(".")
devtools::run_examples()
?DBI::dbListConnections
lapply(dbListConnections(RMySQL::MySQL()), dbDisconnect)
lapply(DBI::dbListConnections(RMySQL::MySQL()), dbDisconnect)
lapply(DBI::dbListConnections(RMySQL::MySQL()), dbDisconnect)
lapply(DBI::dbListConnections(RMySQL::MySQL()), dbDisconnect)
devtools::run_examples()
devtools::load_all(".")
lapply(DBI::dbListConnections(RMySQL::MySQL()), dbDisconnect)
devtools::run_examples()
lapply(DBI::dbListConnections(RMySQL::MySQL()), dbDisconnect)
lapply(DBI::dbListConnections(RMySQL::MySQL()), dbDisconnect)
devtools::load_all(".")
lapply(DBI::dbListConnections(RMySQL::MySQL()), dbDisconnect)
lapply(DBI::dbListConnections(RMySQL::MySQL()), dbDisconnect)
lapply(DBI::dbListConnections(RMySQL::MySQL()), dbDisconnect)
lapply(DBI::dbListConnections(RMySQL::MySQL()), dbDisconnect)
testthat::test_examples(".")
devtools::load_all(".")
??localCheckout
devtools::load_all(".")
result <- fetch_data_from_query(
source = "select author_id, name, last_name from author",
dbms = "MySQL",
tables = c("family_author", "author"),
driver_name = "",
host = "mysql-rfam-public.ebi.ac.uk",
database_name = "Rfam",
user = "rfamro",
password = "",
port = 4497
)
devtools::load_all(".")
result <- fetch_data_from_query(
source = "select author_id, name, last_name from author",
dbms = "MySQL",
tables = c("family_author", "author"),
driver_name = "",
host = "mysql-rfam-public.ebi.ac.uk",
database_name = "Rfam",
user = "rfamro",
password = "",
port = 4497
)
devtools::load_all(".")
result <- fetch_data_from_query(
source = "select author_id, name, last_name from author",
dbms = "MySQL",
tables = c("family_author", "author"),
driver_name = "",
host = "mysql-rfam-public.ebi.ac.uk",
database_name = "Rfam",
user = "rfamro",
password = "",
port = 4497
)
devtools::load_all(".")
result <- fetch_data_from_query(
source = "select author_id, name, last_name from author",
dbms = "MySQL",
tables = c("family_author", "author"),
driver_name = "",
host = "mysql-rfam-public.ebi.ac.uk",
database_name = "Rfam",
user = "rfamro",
password = "",
port = 4497
)
devtools::load_all(".")
result <- fetch_data_from_query(
source = "select author_id, name, last_name from author",
dbms = "MySQL",
tables = c("family_author", "author"),
driver_name = "",
host = "mysql-rfam-public.ebi.ac.uk",
database_name = "Rfam",
user = "rfamro",
password = "",
port = 4497
)
?poolReturn
devtools::load_all(".")
result <- fetch_data_from_query(
source = "select author_id, name, last_name from author",
dbms = "MySQL",
tables = c("family_author", "author"),
driver_name = "",
host = "mysql-rfam-public.ebi.ac.uk",
database_name = "Rfam",
user = "rfamro",
password = "",
port = 4497
)
devtools::load_all(".")
result <- fetch_data_from_query(
source = "select author_id, name, last_name from author",
dbms = "MySQL",
tables = c("family_author", "author"),
driver_name = "",
host = "mysql-rfam-public.ebi.ac.uk",
database_name = "Rfam",
user = "rfamro",
password = "",
port = 4497
)
devtools::load_all(".")
result <- fetch_data_from_query(
source = "select author_id, name, last_name from author",
dbms = "MySQL",
tables = c("family_author", "author"),
driver_name = "",
host = "mysql-rfam-public.ebi.ac.uk",
database_name = "Rfam",
user = "rfamro",
password = "",
port = 4497
)
con <- pool::localCheckout(pool)
pool <- connect_to_server(dbms, driver_name, host, database_name,
user, password, port)
lintr::lint_package()
devtools::load_all(".")
devtools::build_vignettes()
lintr::lint_package()
covr::package_coverage()
library(readepi)
devtools::load_all(".")
?unused_import_linter
??unused_import_linter
lintr::unused_import_linter()
lintr::unused_import_linter(allow_ns_usage = FALSE)
devtools::load_all(".")
lintr::lint_package()
devtools::load_all(".")
lintr::lint_package()
devtools::load_all(".")
unused_import_linter(
allow_ns_usage = FALSE,
except_packages = c("bit64", "data.table", "tidyverse")
)
lintr::unused_import_linter(
allow_ns_usage = FALSE,
except_packages = c("bit64", "data.table", "tidyverse")
)
library(lintr)
unused_import_linter(
allow_ns_usage = FALSE,
except_packages = c("bit64", "data.table", "tidyverse")
)
#' @param table_names the name of the tables where the data was fetched from
#' @param
#' @param id_col_name the column names that unique identify the records in the
#' tables
#' @param fields a vector of strings where each string is a comma-separated list
#' of column names.
#' @param records a vector or a comma-separated string of subset of subject IDs.
#' @param id_position a vector of the column positions of the variable that
#' unique identifies the subjects in each table
#'
#' @param host host server name
#' @param database_name the database name
#' @param user the user name
#' @param password the user's password
#' @param port the server port ID
#' @param credentials_file the path to the file with the user-specific
#' credential details for the projects of interest. See the help of
#' the `readepi` function for more details.
#' @param project_id the name of the target database
#' @param driver_name the name of the MS driver. use `odbc::odbcListDrivers()`
credentials_file
credentials_file <- system.file("extdata", "test.ini", package = "readepi")
credentials <- read_credentials(credentials_file, project_id="Rfam")
credentials
con <- connect_to_server(credentials$dbms, driver_name, credentials$host,
project_id, credentials$user, credentials$pwd,
credentials$port)
driver_name=""
con <- connect_to_server(credentials$dbms, driver_name, credentials$host,
project_id, credentials$user, credentials$pwd,
credentials$port)
project_id="Rfam"
con <- connect_to_server(credentials$dbms, driver_name, credentials$host,
project_id, credentials$user, credentials$pwd,
credentials$port)
query <- ifelse(credentials$dbms == "MySQL",
paste0("select * from ", table, " limit 5"),
paste0("select top 5 * from ", table))
res <- DBI::dbGetQuery(con, query)
res
pool::poolClose(con)
devtools::load_all(".")
visualise_table(
credentials_file = credentials_file,
table_name = "author",
project_id = "Rfam", # this is the database name
driver_name = ""
)
devtools::load_all(".")
pool::poolClose(con)
visualise_table(
credentials_file = credentials_file,
table_name = "author",
project_id = "Rfam", # this is the database name
driver_name = ""
)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(readepi)
devtools::load_all(".")
devtools::run_examples(document=TRUE)
devtools::load_all(".")
devtools::run_examples(document=TRUE)
devtools::load_all(".")
devtools::run_examples(document=TRUE)
devtools::load_all(".")
devtools::run_examples(document=TRUE)
devtools::load_all(".")
devtools::run_examples(document=TRUE)
result <- sql_select_fields_only(
table = "author",
field = c("author_id", "name", "last_name"),
dbms = "MySQL",
driver_name = "",
host = "mysql-rfam-public.ebi.ac.uk",
database_name = "Rfam",
user = "rfamro",
password = "",
port = 4497
)
devtools::run_examples(document=TRUE)
library(readepi)
devtools::run_examples(document=TRUE)
devtools::run_examples()
devtools::load_all(".")
devtools::run_examples()
devtools::load_all(".")
devtools::run_examples()
devtools::load_all(".")
devtools::build_readme()
devtools::load_all(".")
testthat::test_examples()
testthat::test_examples(".")
covr::package_coverage()
lintr::lint_package()
devtools::load_all(".")
lintr::lint_package()
devtools::load_all(".")
devtools::load_all(".")
covr::package_coverage()
devtools::load_all(".")
covr::package_coverage()
data <- readepi(
profile_id = 19,
area_type_id = 202
)
dim(data$data)
data <- readepi(
indicator_id = 90362,
area_type_id = 202,
fields = c("IndicatorID", "AreaCode", "Age", "Value"),
records = c("E92000001", "E12000002", "E12000009"),
id_col_name = "AreaCode"
)
res <- fingertips_subset_columns(
fields = c("IndicatorID", "AreaCode", "Age", "Value"),
data = readepi(
profile_id = 19,
area_type_id = 202
)$data
)
dim(res)
res <- fingertips_subset_rows(
records = c("E92000001", "E12000002", "E12000009"),
id_col_name = "AreaCode",
data = readepi(
profile_id = 19,
area_type_id = 202
)$data
)
dim(res)
res <- get_ind_id_from_profile(
metadata = list(
indicator_profile_domain = fingertipsR::indicators(),
indicator_ids_names = fingertipsR::indicators_unique(),
area_type = fingertipsR::area_types()
),
profile_id = 19
)
res <- get_profile_name(
profile_id = 19,
profile_name = "Public Health Outcomes Framework",
metadata = list(
indicator_profile_domain = fingertipsR::indicators(),
indicator_ids_names = fingertipsR::indicators_unique(),
area_type = fingertipsR::area_types()
)
)
indicator_id <- get_ind_id_from_domain_name(
metadata = list(
indicator_profile_domain = fingertipsR::indicators(),
indicator_ids_names = fingertipsR::indicators_unique(),
area_type = fingertipsR::area_types()
),
domain_name = "B. Wider determinants of health",
)
indicator_id <- get_ind_id_from_domain_id(
metadata = list(
indicator_profile_domain = fingertipsR::indicators(),
indicator_ids_names = fingertipsR::indicators_unique(),
area_type = fingertipsR::area_types()
),
domain_id = 1000041,
indicator_name = NULL
)
indicator_id <- get_ind_id_from_ind_name(
metadata = list(
indicator_profile_domain = fingertipsR::indicators(),
indicator_ids_names = fingertipsR::indicators_unique(),
area_type = fingertipsR::area_types()
),
indicator_name = "Pupil absence"
)
devtools::load_all(".")
devtools::load_all(".")
covr::package_coverage()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
covr::package_coverage()
devtools::load_all(".")
covr::package_coverage()
library(readepi)
covr::package_coverage()
testthat::test_examples()
testthat::test_examples(".")
devtools::build_readme()
devtools::build_vignettes()
devtools::load_all(".")
devtools::build_readme()
library(readepi)
devtools::build_vignettes()
covr::package_coverage()
covr::package_coverage()
lintr::lint_package()
devtools::load_all(".")
lintr::lint_package()
devtools::load_all(".")
devtools::build_readme()
devtools::run_examples()
testthat::test_examples(".")
devtools::build_readme()
devtools::load_all(".")
devtools::build_readme()
vignette("readepi")
devtools::load_all(".")
devtools::build_readme()
devtools::build_readme()
devtools::load_all(".")
devtools::build_readme()
devtools::load_all(".")
setwd("~/Desktop/MRC-LSHTM/Epiverse-trace/review/readepi")
devtools::build_readme()
devtools::build_vignettes()
